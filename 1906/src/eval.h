/*
 * < Nawito is a chess engine winboard derived of Danasah507>
 * Copyright (C) <2019> <Ernesto Torres Feliciano>
 * E-mail <ernesto2@nauta.cu>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 */

#define	COUNT_PAWN_ATTACK(m)			((m) >> 12)
#define	COUNT_KNIGHT_BISHOP_ATTACK(m)	((m >> 8) & 15)
#define	COUNT_ROOK_ATTACK(m)			((m >> 5) & 7)
#define	COUNT_QUEEN_ATTACK(m)			((m >> 1) & 15)
#define	COUNT_KING_ATTACK(m)			(m & 1)
#define	ATTACKS_SUM(m)					(COUNT_PAWN_ATTACK(m) + 2 * COUNT_KNIGHT_BISHOP_ATTACK(m) + 3 * COUNT_ROOK_ATTACK(m) + 5 * COUNT_QUEEN_ATTACK(m) + 5 * COUNT_KING_ATTACK(m))
#define ATTACK_WITHOUT_KING(m)			(m & 16382)

int		PawnMidGamePSTini[64]	= {
	100, 100, 100, 100, 100, 100, 100, 100,
	105, 110, 115, 120, 120, 115, 110, 105,
	104, 108, 112, 116, 116, 112, 108, 104,
	103, 106, 109, 112, 112, 109, 106, 103,
	102, 104, 108, 108, 108, 106, 104, 102,
	102, 102, 103, 104, 104, 103, 102, 102,
	100, 100, 100,  85,  85, 100, 100, 100,
	100, 100, 100, 100, 100, 100, 100, 100,
	};
int		KnightMidGamePSTini[64]	= {
	172, 282, 292, 305, 305, 292, 282, 172,
	287, 305, 315, 320, 320, 315, 305, 287,
	310, 320, 330, 335, 335, 330, 320, 310,
	310, 320, 330, 335, 335, 330, 320, 310,
	305, 315, 325, 330, 330, 325, 315, 305,
	282, 305, 315, 320, 320, 315, 305, 282,
	272, 282, 298, 305, 305, 298, 282, 272,
	257, 267, 277, 282, 282, 277, 267, 257,
	};
int		BishopMidGamePSTini[64]	= {
	306, 306, 308, 310, 310, 308, 306, 306,
	306, 320, 318, 320, 320, 318, 320, 306,
	308, 318, 324, 322, 322, 324, 318, 308,
	310, 320, 322, 328, 328, 322, 320, 310,
	310, 320, 322, 328, 328, 322, 320, 310,
	308, 318, 324, 322, 322, 324, 318, 308,
	306, 320, 318, 320, 320, 318, 320, 306,
	296, 296, 294, 300, 300, 294, 296, 296,
	};
int		RookMidGamePSTini[64]	= {
	497, 500, 503, 506, 506, 503, 500, 497,
	494, 497, 500, 503, 503, 500, 497, 494,
	497, 500, 503, 506, 506, 503, 500, 497,
	488, 491, 494, 497, 497, 494, 491, 488,
	491, 494, 497, 500, 500, 497, 494, 491,
	494, 497, 500, 503, 503, 500, 497, 494,
	496, 499, 502, 505, 505, 502, 499, 496,
	499, 502, 505, 508, 508, 505, 502, 499,
	};
int		QueenMidGamePSTini[64]	= {
	930, 940, 940, 945, 945, 940, 940, 930,
	948, 958, 958, 958, 958, 958, 958, 948,
	940, 950, 955, 955, 955, 955, 950, 940,
	945, 950, 955, 955, 955, 955, 950, 945,
	950, 950, 955, 955, 955, 955, 950, 945,
	940, 955, 955, 955, 955, 955, 950, 940,
	940, 950, 960, 950, 950, 950, 950, 940,
	930, 940, 940, 945, 945, 940, 940, 930,
	};
int		KingMidGamePSTini[64]	= {
	120, 130, 110, 100, 100, 110, 130, 120,
	120, 130, 110, 100, 100, 110, 130, 120,
	140, 150, 130, 110, 110, 130, 150, 140,
	160, 170, 150, 130, 130, 150, 170, 160,
	180, 190, 170, 150, 150, 170, 190, 180,
	200, 210, 190, 170, 170, 190, 210, 200,
	220, 230, 210, 190, 190, 210, 230, 220,
	230, 240, 220, 200, 200, 220, 240, 230,
	};

int		PawnEndGamePSTini[64]	= {
	100, 100, 100, 100, 100, 100, 100, 100,
	105, 110, 115, 120, 120, 115, 110, 105,
	104, 108, 112, 116, 116, 112, 108, 104,
	103, 106, 109, 112, 112, 109, 106, 103,
	102, 104, 106, 108, 108, 106, 104, 102,
	101, 102, 103, 104, 104, 103, 102, 101,
	100, 100, 100, 100, 100, 100, 100, 100,
	100, 100, 100, 100, 100, 100, 100, 100,
	};
int		KnightEndGamePSTini[64]	= {
	275, 285, 295, 300, 300, 295, 285, 275,
	285, 295, 305, 310, 310, 305, 295, 285,
   	295, 305, 315, 320, 320, 315, 305, 295,
  	300, 310, 320, 325, 325, 320, 310, 300,
  	300, 310, 320, 325, 325, 320, 310, 300,
   	295, 305, 315, 320, 320, 315, 305, 295,
  	285, 295, 305, 310, 310, 305, 295, 285,
   	275, 285, 295, 300, 300, 295, 285, 275,
	};
int		BishopEndGamePSTini[64]	= {
	302, 308, 311, 314, 314, 311, 308, 302,
    308, 314, 317, 320, 320, 317, 314, 308,
    311, 317, 320, 323, 323, 320, 317, 311,
    314, 320, 323, 328, 328, 323, 320, 314,
    314, 320, 323, 328, 328, 323, 320, 314,
    311, 317, 320, 323, 323, 320, 317, 311,
	308, 314, 317, 320, 320, 317, 314, 308,
    302, 308, 311, 314, 314, 311, 308, 302,
	};
int		RookEndGamePSTini[64]	= {
	500, 503, 506, 509, 509, 506, 503, 500,
	494, 497, 500, 503, 503, 500, 497, 494,
	497, 500, 503, 506, 506, 503, 500, 497,
	488, 491, 494, 497, 497, 494, 491, 488,
	491, 494, 497, 500, 500, 497, 494, 491,
	494, 497, 500, 503, 503, 500, 497, 494,
	496, 499, 502, 505, 505, 502, 499, 496,
	499, 502, 505, 508, 508, 505, 502, 499,
	};
int		QueenEndGamePSTini[64]	= {
	926, 934, 938, 942, 942, 938, 934, 926,
    950, 958, 962, 966, 966, 962, 958, 950,
    938, 946, 950, 954, 954, 950, 946, 938,
    942, 950, 954, 958, 958, 954, 950, 942,
    942, 950, 954, 958, 958, 954, 950, 942,
    938, 946, 950, 954, 954, 950, 946, 938,
    934, 942, 946, 950, 950, 946, 942, 934,
    926, 934, 938, 942, 942, 938, 934, 926,
    };
int		KingEndGamePSTini[64]	= {
	118, 142, 154, 166, 166, 154, 142, 118,
    142, 166, 178, 190, 190, 178, 166, 142,
    154, 178, 190, 202, 202, 190, 178, 154,
    166, 190, 202, 214, 214, 202, 190, 166,
    166, 190, 202, 214, 214, 202, 190, 166,
    154, 178, 190, 202, 202, 190, 178, 154,
    142, 166, 178, 190, 190, 178, 166, 142,
	118, 142, 154, 166, 166, 154, 142, 118,
	};

int		PawnDoubledMidGameIni[64]		= {
	14,  10,  11,  12,  12,  11,  10,  14,
	14,  10,  11,  12,  12,  11,  10,  14,
	14,  10,  11,  12,  12,  11,  10,  14,
	14,  10,  11,  12,  12,  11,  10,  14,
	14,  10,  11,  12,  12,  11,  10,  14,
	14,  10,  11,  12,  12,  11,  10,  14,
	14,  10,  11,  12,  12,  11,  10,  14,
	14,  10,  11,  12,  12,  11,  10,  14,
};
int		PawnDoubledEndGameIni[64]		= {
	28,  20,  22,  24,  24,  22,  20,  28,
	28,  20,  22,  24,  24,  22,  20,  28,
	28,  20,  22,  24,  24,  22,  20,  28,
	28,  20,  22,  24,  24,  22,  20,  28,
	28,  20,  22,  24,  24,  22,  20,  28,
	28,  20,  22,  24,  24,  22,  20,  28,
	28,  20,  22,  24,  24,  22,  20,  28,
	28,  20,  22,  24,  24,  22,  20,  28,
};
int		PawnIsolatedMidGameIni[64]		= {
	12,  12,  12,  14,  14,  12,  12,  12,
	12,  12,  12,  14,  14,  12,  12,  12,
	12,  12,  12,  14,  14,  12,  12,  12,
	12,  12,  12,  14,  14,  12,  12,  12,
	12,  12,  12,  14,  14,  12,  12,  12,
	12,  12,  12,  14,  14,  12,  12,  12,
	12,  12,  12,  14,  14,  12,  12,  12,
	12,  12,  12,  14,  14,  12,  12,  12,
};
int		PawnIsolatedEndGameIni[64]		= {
	24,  24,  24,  28,  28,  24,  24,  24,
	24,  24,  24,  28,  28,  24,  24,  24,
	24,  24,  24,  28,  28,  24,  24,  24,
	24,  24,  24,  28,  28,  24,  24,  24,
	24,  24,  24,  28,  28,  24,  24,  24,
	24,  24,  24,  28,  28,  24,  24,  24,
	24,  24,  24,  28,  28,  24,  24,  24,
	24,  24,  24,  28,  28,  24,  24,  24,
};
int		PawnUnitedMidGameIni[64]		= {
	 0,   0,   0,   0,   0,   0,   0,   0,
	13,  14,  15,  16,  16,  15,  14,  13,
	11,  12,  13,  14,  14,  13,  12,  11,
	10,  11,  12,  13,  13,  12,  11,  10,
	 7,   8,   9,  10,  10,   9,   8,   7,
	 4,   4,   5,   6,   6,   5,   4,   4,
	 3,   3,   3,   3,   3,   3,   3,   3,
	 0,   0,   0,   0,   0,   0,   0,   0,
};
int		PawnUnitedEndGameIni[64]		= {
	10,  10,  10,  10,  10,  10,  10,  10,
	10,  10,  10,  10,  10,  10,  10,  10,
	 6,   6,   6,   6,   6,   6,   6,   6,
	 4,   4,   4,   4,   4,   4,   4,   4,
	 3,   3,   3,   3,   3,   3,   3,   3,
	 2,   2,   2,   2,   2,   2,   2,   2,
	 1,   1,   1,   1,   1,   1,   1,   1,
	 1,   1,   1,   1,   1,   1,   1,   1,
};
int		PawnBackwardMidGameIni[64]		= {
	7,  10,  10,  12,  12,  10,  10,  7,
	7,  10,  10,  12,  12,  10,  10,  7,
	7,  10,  10,  12,  12,  10,  10,  7,
	7,  10,  10,  12,  12,  10,  10,  7,
	7,  10,  10,  12,  12,  10,  10,  7,
	7,  10,  10,  12,  12,  10,  10,  7,
	7,  10,  10,  12,  12,  10,  10,  7,
	7,  10,  10,  12,  12,  10,  10,  7,
};
int		PawnBackwardEndGameIni[64]		= {
	10,  14,  14,  17,  17,  14,  14,  10,
	10,  14,  14,  17,  17,  14,  14,  10,
	10,  14,  14,  17,  17,  14,  14,  10,
	10,  14,  14,  17,  17,  14,  14,  10,
	10,  14,  14,  17,  17,  14,  14,  10,
	10,  14,  14,  17,  17,  14,  14,  10,
	10,  14,  14,  17,  17,  14,  14,  10,
	10,  14,  14,  17,  17,  14,  14,  10,
};
int		PawnPassedEndGameIni[64]		= {
	10,  10,  10,  10,  10,  10,  10,  10,
	10,  10,  10,  10,  10,  10,  10,  10,
	 6,   6,   6,   6,   6,   6,   6,   6,
	 3,   3,   3,   3,   3,   3,   3,   3,
	 1,   1,   1,   1,   1,   1,   1,   1,
	 0,   0,   0,   0,   0,   0,   0,   0,
	 0,   0,   0,   0,   0,   0,   0,   0,
	 0,   0,   0,   0,   0,   0,   0,   0,
};

int		PassedPawnPotentialIni[64]		= {
	10,  10,  10,  10,  10,  10,  10,  10,
	10,  10,  10,  10,  10,  10,  10,  10,
	 6,   6,   6,   6,   6,   6,   6,   6,
	 3,   3,   3,   3,   3,   3,   3,   3,
	 1,   1,   1,   1,   1,   1,   1,   1,
	 0,   0,   0,   0,   0,   0,   0,   0,
	 0,   0,   0,   0,   0,   0,   0,   0,
	 0,   0,   0,   0,   0,   0,   0,   0,
};

int		KnightOutpostIni[64]			= {
	0,   0,   0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,   0,   0,
	0,   0,   4,   5,   5,   4,   0,   0,
	0,   2,   5,  10,  10,   5,   2,   0,
	0,   2,   5,  10,  10,   5,   2,   0,
	0,   0,   0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,   0,   0,
};
int		KnightMoveImportIni[64]			= {
	0,   0,   0,   0,   0,   0,   0,   0,
	0,   2,   2,   2,   2,   2,   2,   0,
	0,   2,   4,   4,   4,   4,   2,   0,
	0,   2,   4,   4,   4,   4,   2,   0,
	0,   2,   4,   4,   4,   4,   2,   0,
	0,   2,   4,   4,   4,   4,   2,   0,
	0,   2,   2,   2,   2,   2,   2,   0,
	0,   0,   0,   0,   0,   0,   0,   0,
};
int		SRKingCountIni[64]				= {
	4,   4,   4,   4,   4,   4,   4,   4,
	4,   4,   4,   4,   4,   4,   4,   4,
	4,   4,   4,   4,   4,   4,   4,   4,
	4,   4,   4,   4,   4,   4,   4,   4,
	4,   4,   4,   4,   4,   4,   4,   4,
	4,   3,   3,   3,   3,   3,   3,   4,
	2,   1,   1,   1,   1,   1,   1,   2,
	2,   0,   0,   0,   0,   0,   0,   2,
};

int		RookCompellingIni[64]			= {
	100, 100, 100, 100, 100, 100, 100, 100,
	100, 100, 100, 100, 100, 100, 100, 100,
	 68,  68,  68,  68,  68,  68,  68,  68,
	 35,  35,  35,  35,  35,  35,  35,  35,
	  0,   0,   0,   0,   0,   0,   0,   0,
	  0,   0,   0,   0,   0,   0,   0,   0,
	  0,   0,   0,   0,   0,   0,   0,   0,
	  0,   0,   0,   0,   0,   0,   0,   0,
};
int		QueenCompellingIni[64]			= {
	150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150,
	100, 100, 100, 100, 100, 100, 100, 100,
	 50,  50,  50,  50,  50,  50,  50,  50,
	  0,   0,   0,   0,   0,   0,   0,   0,
	  0,   0,   0,   0,   0,   0,   0,   0,
	  0,   0,   0,   0,   0,   0,   0,   0,
	  0,   0,   0,   0,   0,   0,   0,   0,
};

int		PawnImportIni[64]				= {
	6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 7, 7, 7, 7, 6, 6,
	6, 6, 7, 8, 8, 7, 6, 6,
	6, 6, 7, 8, 8, 7, 6, 6,
	6, 6, 7, 7, 7, 7, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6,
};

int		BishopPairScore[61]				= {43,43,43,42,42,42,41,41,41,40,40,40,39,39,39,38,38,38,37,37,37,36,36,36,35,35,35,34,34,34,33,33,33,32,32,32,31,31,31,30,30,30,29,29,29,28,28,28,27,27,27,26,26,26,25,25,25,24,24,24,24};
int		BadBishopScore[61]				= {0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120};

int		KnightPair[11]					= {0, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8};
int		RookPair[11]					= {0, 0, 16, 16, 16, 16, 16, 16, 16, 16, 16};

/******* Evaluacion de la mobilidad. **********/		 /// OK
int		KnightMidGameMob[52]			= {-12,-11,-10,-8,-7,-6,-5,-4,-2,-1,0,1,2,4,5,6,7,8,10,11,12,13,14,16,17,18,19,20,21,22,23,24,24,25,26,26,28,29,29,30,30,31,31,31,32,32,33,33,34,34,34,34};
int		KnightEndGameMob[52]			= {-12,-11,-10,-8,-7,-6,-5,-4,-2,-1,0,1,2,4,5,6,7,8,10,11,12,13,14,16,17,18,19,20,21,22,23,24,24,25,26,26,28,29,29,30,30,31,31,31,32,32,33,33,34,34,34,34};
int		BishopMidGameMob[46]			= {-20,-18,-15,-12,-9,-4,2,5,8,11,13,16,19,22,24,30,35,38,41,44,46,48,49,51,53,54,55,56,57,59,61,62,63,64,64,65,65,65,65,66,66,66,66,67,67,67};
int		BishopEndGameMob[46]			= {-20,-18,-15,-12,-9,-4,2,5,8,11,13,16,19,22,24,30,35,38,41,44,46,48,49,51,53,54,55,56,57,59,61,62,63,64,64,65,65,65,65,66,66,66,66,67,67,67};
int		RookMidGameMob[52]				= {-12,-10,-8,-5,-3,0,3,6,8,10,13,15,18,21,24,26,28,30,33,35,37,39,41,43,44,46,47,48,49,50,52,53,55,55,56,57,57,58,59,59,60,60,61,62,62,63,64,64,65,65,66,66};
int		RookEndGameMob[52]				= {-20,-16,-13,-9,-6,-3,0,3,7,10,13,17,21,25,29,32,36,41,44,48,51,55,58,62,65,67,70,74,78,82,85,88,92,96,100,102,104,107,109,111,114,115,117,118,119,120,120,121,121,122,122,122};
int		QueenMidGameMob[28]				= {-10, -8, -6, -4, -2,  0,  2,  4,  6,  8, 10, 12, 13, 14, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16};
int		QueenEndGameMob[28]				= {-20,-15,-10, -5,  0,  5, 10, 15, 19, 23, 27, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30};

/******* Evaluacion de las simplificaciones. **********/
int		PieceSimp[128]					= {
			100,100,99,99,98,98,97,97,96,96,95,95,94,94,93,93,92,92,91,91,90,90,89,89,
			89,88,88,87,87,87,86,86,85,85,85,84,84,83,83,83,82,82,81,81,81,80,80,80,		///	final
			81,81,82,82,83,84,84,85,85,86,86,87,88,88,89,89,		///	mediojuego - final
			90,90,90,90,91,91,91,91,91,91,92,92,92,92,92,92,93,93,93,93,93,93,94,94,94,94,94,95,95,95,95,95,		///	mediojuego
			95,96,96,96,96,96,96,97,97,97,97,97,97,98,98,98,98,98,98,99,99,99,99,99,99,100,100,100,100,100,100,100,
		};
int		PawnSimp[128]					= {
			40,40,39,39,38,38,38,37,37,36,36,35,35,34,34,33,33,33,32,32,31,31,30,30,30,29,29,28,28,28,27,27,
			26,26,25,25,25,24,24,23,23,23,22,22,21,21,20,20,		///	final
			19,19,18,18,17,17,16,16,15,14,14,13,13,12,12,11,		///	mediojuego - final
			10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,		///	mediojuego
			8,7,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,
		};

/******* Evaluacion de la seguridad del rey. **********/
int		SafetyTable[100]				= {0,0,1,2,3,5,7,9,12,15,18,22,26,30,35,39,44,50,56,62,68,75,82,85,89,97,105,113,122,131,140,150,169,180,191,
											202,213,225,237,248,260,272,283,295,307,319,330,342,354,366,377,389,401,412,424,436,448,459,471,483,494,
											500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,
											500,500,500,500,500,500,500,500,500,500,500,500};

/******* Evaluacion del final de alfiles. **********/
int		DiferentBishop[17]				= {MATE, 256, 128, 85, 64, 51, 43, 37, 32, 28, 26, 23, 21, 20, 18, 17, 16};
int		EqualBishop[17]					= {MATE, 128,  64, 43, 32, 26, 21, 18, 16, 14, 13, 12, 11, 10,  9,  9,  8};

/******* Ajuste de las piezas segun el numero de peones o piezas. **********/
int		PawnAdjust[61]     				= {50,47,44,41,38,34,30,28,25,24,22,21,20,19,18,16,15,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
int		KnightAdjust[61]				= {-20,-19,-19,-18,-18,-17,-17,-16,-16,-15,-15,-14,-13,-13,-12,-12,-11,-11,-10,-10,-9,-8,-8,-7,-7,-6,-6,-5,-5,-4,-4,-3,-3,-2,-2,-1,-1,0,0,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12};
int		RookAdjust[61]					= {15,15,14,14,13,13,13,12,12,11,11,11,10,10,9,9,9,8,8,8,7,7,6,6,6,5,5,4,4,4,3,3,2,2,2,1,1,0,0,0,-1,-1,-2,-2,-2,-3,-3,-3,-4,-4,-5,-5,-6,-6,-7,-7,-7,-8,-8,-9,-9};
int		WithOutBishop					= 20;

int		CenterTableIni[64] 				= {
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 4, 6, 8, 8, 6, 4, 0,
	0, 4, 6, 8, 8, 6, 4, 0,
	0, 0, 4, 6, 6, 4, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
};

int		PawnCandidateMidGameIni[64]	= {
	55,  55,  55,  55,  55,  55,  55,  55,
	55,  55,  55,  55,  55,  55,  55,  55,
	35,  35,  35,  35,  35,  35,  35,  35,
	20,  20,  20,  20,  20,  20,  20,  20,
	10,  10,  10,  10,  10,  10,  10,  10,
	 5,   5,   5,   5,   5,   5,   5,   5,
	 5,   5,   5,   5,   5,   5,   5,   5,
	 5,   5,   5,   5,   5,   5,   5,   5,
};
int		PawnCandidateEndGameIni[64]	= {
   110, 110, 110, 110, 110, 110, 110, 110,
   110, 110, 110, 110, 110, 110, 110, 110,
	70,  70,  70,  70,  70,  70,  70,  70,
	40,  40,  40,  40,  40,  40,  40,  40,
	20,  20,  20,  20,  20,  20,  20,  20,
	10,  10,  10,  10,  10,  10,  10,  10,
	10,  10,  10,  10,  10,  10,  10,  10,
	10,  10,  10,  10,  10,  10,  10,  10,
};
int		PawnPassedMidGameIni[64]	= {
	70,  70,  70,  70,  70,  70,  70,  70,
	70,  70,  70,  70,  70,  70,  70,  70,
	46,  46,  46,  46,  46,  46,  46,  46,
	28,  28,  28,  28,  28,  28,  28,  28,
	16,  16,  16,  16,  16,  16,  16,  16,
	10,  10,  10,  10,  10,  10,  10,  10,
	10,  10,  10,  10,  10,  10,  10,  10,
	10,  10,  10,  10,  10,  10,  10,  10,
};
int		PawnPassedUnstoppedIni[64]	= {
	800, 800, 800, 800, 800, 800, 800, 800,
	800, 800, 800, 800, 800, 800, 800, 800,
	480, 480, 480, 480, 480, 480, 480, 480,
	240, 240, 240, 240, 240, 240, 240, 240,
	 80,  80,  80,  80,  80,  80,  80,  80,
	  0,   0,   0,   0,   0,   0,   0,   0,
	  0,   0,   0,   0,   0,   0,   0,   0,
	  0,   0,   0,   0,   0,   0,   0,   0,
};
int		PawnPassedProtectedMidGameIni[64]	= {
	24, 24, 28,	32, 32, 28, 24, 24,
	24, 24, 28,	32, 32, 28, 24, 24,
	20, 20, 24, 28, 28, 24, 20, 20,
	16, 16, 20, 30, 30, 20, 16, 16,
	12, 12, 16, 16, 16, 16, 12, 12,
	 8,  8, 12, 12, 12, 12,  8,  8,
	 4,  4,  8,  8,  8,  8,  4,  4,
	 4,  4,  8,  8,  8,  8,  4,  4,
};
int		PawnPassedProtectedEndGameIni[64]	= {
	32, 28, 28,	24, 24, 28, 28, 32,
	32, 28, 28,	24, 24, 28, 28, 32,
	28, 24, 24, 20, 20, 24, 24, 28,
	24, 20, 20, 16, 16, 20, 20, 24,
	16, 12, 12, 12, 12, 12, 12, 16,
	12,  8,  8,  8,  8,  8,  8, 12,
	 8,  4,  4,  4,  4,  4,  4,  8,
	 8,  4,  4,  4,  4,  4,  4,  8,
};

int		SquareToPromotionIni[64]	= {
	A8, B8, C8, D8, E8, F8, G8, H8,
	A8, B8, C8, D8, E8, F8, G8, H8,
	A8, B8, C8, D8, E8, F8, G8, H8,
	A8, B8, C8, D8, E8, F8, G8, H8,
	A8, B8, C8, D8, E8, F8, G8, H8,
	A8, B8, C8, D8, E8, F8, G8, H8,
	A8, B8, C8, D8, E8, F8, G8, H8,
	A8, B8, C8, D8, E8, F8, G8, H8,
};

///	440
